"""Add passwords, service_events and permission_events tables

Revision ID: 7b7d092c8b80
Revises: 2c2c0bdd0ba6
Create Date: 2022-02-02 23:36:54.354234

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7b7d092c8b80'
down_revision = '2c2c0bdd0ba6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('passwords',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('current', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission_events',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('performed_by_user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('performed_on_user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('performed_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['performed_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['performed_on_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_events',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('performed_by_user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('performed_on_service_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('performed_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['performed_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['performed_on_service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('operations')
    op.drop_column('users', 'hashed_password')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('operations',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('performed_by', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('subject', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['performed_by'], ['users.id'], name='operations_performed_by_fkey'),
    sa.ForeignKeyConstraint(['subject'], ['users.id'], name='operations_subject_fkey'),
    sa.PrimaryKeyConstraint('id', name='operations_pkey')
    )
    op.drop_table('service_events')
    op.drop_table('permission_events')
    op.drop_table('passwords')
    op.add_column('users', sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False))
    # ### end Alembic commands ###
